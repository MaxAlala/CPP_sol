&ACCESS RVP
&REL 303
&PARAM SensorITMASK = *
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM DISKPATH = KRC:\R1\Program
DEF XmlClient( )

;FOLD Declaration
STRUC CDAT INT Cmd, INT IValue, REAL FValue, BOOL BValue
DECL CDAT CDEFAULT
DECL EKI_STATUS RET
DECL INT    IndexHead, IndexTail, I
DECL INT    IValue
DECL BOOL   BValue
DECL REAL   FValue
DECL BOOL   bErrMsg
DECL INT    RXCount
DECL CDAT   CmdDate[256]

DECL POS    Point1Date[256]
DECL POS    Point3Date[2]
DECL POS    Point2Date[256]
DECL PDAT   PDate[256]
DECL LDAT   LDate[256]
DECL FDAT   FDate[256]
DECL INT Counter
DECL INT Protocol
POS p;
;ENDFOLD

;FOLD INI
  ;FOLD BASISTECH INI  
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
    ;Make your modifications here
  ;ENDFOLD (USER INI)
;ENDFOLD (INI)
	$TOOL =  TOOL_DATA[15]
	$BASE = BASE_DATA[16]
Counter = 1
bErrMsg=true
IValue=0
BValue=FALSE
FValue=0.0
p = {X 0.0, Y 0.0, Z 0.0, A 0.0, B 0.0, C 0.0, S 0, T 0}
FOR I=1 TO 256
  CmdDate[I]={Cmd 0,IValue 0,FValue 0.0,BValue FALSE}
  Point1Date[I]={X 0.0, Y 0.0, Z 0.0, A 0.0, B 0.0, C 0.0, S 0, T 0}
  Point2Date[I]={X 0.0, Y 0.0, Z 0.0, A 0.0, B 0.0, C 0.0, S 0, T 0}
  PDate[I]=PDEFAULT
  FDate[I]=FDEFAULT
  LDate[I]=LDEFAULT
ENDFOR
$FLAG[1]=FALSE ; Connect
$FLAG[2]=FALSE ; Get data
$FLAG[3]=FALSE ; Read data
$FLAG[4]=FALSE ; Execution
$FLAG[5]=FALSE ; Overlow
RET=EKI_Init("XmlClient")

LOOP

REPEAT
RET=EKI_Close("XmlClient")
RET=EKI_Open("XmlClient")
if bErrMsg then
  bErrMsg=false
  if RET.connected==FALSE THEN
    MSGNOTIFY("No connection to the XmlServer")
  ENDIF
endif
UNTIL RET.connected
MSGNOTIFY("Connected to the XmlServer")
bErrMsg=true

WAIT FOR $FLAG[1]
RET = EKI_ClearBuffer("XmlClient", "Server")
IndexHead=1
IndexTail=1
RXCount=0
$FLAG[2]=FALSE
$FLAG[3]=FALSE
$FLAG[4]=FALSE
$FLAG[5]=FALSE
PTP XHOME

LOOP

IF $FLAG[1]==FALSE THEN
  EXIT
ENDIF

IF ($FLAG[2]==TRUE) AND ($FLAG[5]==FALSE) THEN
  $FLAG[2]=FALSE
  $FLAG[3]=TRUE
  RET = EKI_CheckBuffer("XmlClient", "Server/Cmd")
  RXCount=RXCount+RET.buff
ENDIF

IF $FLAG[3]==TRUE THEN

  RET = EKI_GetInt("XmlClient","Server/Cmd",CmdDate[IndexHead].Cmd)

  SWITCH CmdDate[IndexHead].Cmd
    CASE 2
      RET=EKI_GetInt("XmlClient","Server/NoIO",CmdDate[IndexHead].IValue)
      RET=EKI_GetBool("XmlClient","Server/State",CmdDate[IndexHead].BValue)
    CASE 3
      RET=EKI_GetInt("XmlClient","Server/NoIO", CmdDate[IndexHead].IValue)
      RET=EKI_GetBool("XmlClient","Server/State", CmdDate[IndexHead].BValue)
      RET=EKI_GetReal("XmlClient","Server/Time",CmdDate[IndexHead].FValue)
    CASE 4
      RET=EKI_GetReal("XmlClient","Server/Vel", PDate[IndexHead].VEL)
    CASE 5, 6
      RET=EKI_GetReal("XmlClient","Server/Pos1/@X", Point1Date[IndexHead].X)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@Y", Point1Date[IndexHead].Y)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@Z", Point1Date[IndexHead].Z)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@A", Point1Date[IndexHead].A)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@B", Point1Date[IndexHead].B)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@C", Point1Date[IndexHead].C)
      RET=EKI_GetInt("XmlClient","Server/Pos1/@S", Point1Date[IndexHead].S)
      RET=EKI_GetInt("XmlClient","Server/Pos1/@T", Point1Date[IndexHead].T)
      RET=EKI_GetInt("XmlClient","Server/ToolNo", FDate[IndexHead].TOOL_NO)
      RET=EKI_GetInt("XmlClient","Server/BaseNo", FDate[IndexHead].BASE_NO)
      RET=EKI_GetInt("XmlClient","Server/IpoFrame", CmdDate[IndexHead].IValue)
      FDate[IndexHead].IPO_FRAME=INT_TO_IPOMODE(CmdDate[IndexHead].IValue)
      RET=EKI_GetBool("XmlClient","Server/TQState", FDate[IndexHead].TQ_STATE)
      RET=EKI_GetReal("XmlClient","Server/Vel", PDate[IndexHead].VEL)
      RET=EKI_GetReal("XmlClient","Server/Acc", PDate[IndexHead].ACC)
      RET=EKI_GetReal("XmlClient","Server/ApoDist", PDate[IndexHead].APO_DIST)
      RET=EKI_GetInt("XmlClient","Server/ApoMode", CmdDate[IndexHead].IValue)
      PDate[IndexHead].APO_MODE=INT_TO_APOMODE(CmdDate[IndexHead].IValue)
      RET=EKI_GetReal("XmlClient","Server/GearJerk", PDate[IndexHead].GEAR_JERK)
    CASE 7,8
      RET=EKI_GetReal("XmlClient","Server/Pos1/@X", Point1Date[IndexHead].X)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@Y", Point1Date[IndexHead].Y)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@Z", Point1Date[IndexHead].Z)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@A", Point1Date[IndexHead].A)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@B", Point1Date[IndexHead].B)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@C", Point1Date[IndexHead].C)
      RET=EKI_GetInt("XmlClient","Server/Pos1/@S", Point1Date[IndexHead].S)
      RET=EKI_GetInt("XmlClient","Server/Pos1/@T", Point1Date[IndexHead].T)
      RET=EKI_GetInt("XmlClient","Server/ToolNo", FDate[IndexHead].TOOL_NO)
      RET=EKI_GetInt("XmlClient","Server/BaseNo", FDate[IndexHead].BASE_NO)
      RET=EKI_GetInt("XmlClient","Server/IpoFrame", CmdDate[IndexHead].IValue)
      FDate[IndexHead].IPO_FRAME=INT_TO_IPOMODE(CmdDate[IndexHead].IValue)
      RET=EKI_GetBool("XmlClient","Server/TQState", FDate[IndexHead].TQ_STATE)
      RET=EKI_GetReal("XmlClient","Server/Vel", LDate[IndexHead].VEL)
      RET=EKI_GetReal("XmlClient","Server/Acc", LDate[IndexHead].ACC)
      RET=EKI_GetReal("XmlClient","Server/ApoDist", LDate[IndexHead].APO_DIST)
      RET=EKI_GetReal("XmlClient","Server/ApoFac", LDate[IndexHead].APO_FAC)
      RET=EKI_GetReal("XmlClient","Server/AxisVel", LDate[IndexHead].AXIS_VEL)
      RET=EKI_GetReal("XmlClient","Server/AxisAcc", LDate[IndexHead].AXIS_ACC)
      RET=EKI_GetInt("XmlClient","Server/OriType", CmdDate[IndexHead].IValue)
      LDate[IndexHead].ORI_TYP=INT_TO_ORITYPE(CmdDate[IndexHead].IValue)
      RET=EKI_GetInt("XmlClient","Server/CircType", CmdDate[IndexHead].IValue)
      LDate[IndexHead].CIRC_TYP=INT_TO_CIRCTYPE(CmdDate[IndexHead].IValue)
      RET=EKI_GetReal("XmlClient","Server/JerkFac", LDate[IndexHead].JERK_FAC)
      RET=EKI_GetReal("XmlClient","Server/GearJerk", LDate[IndexHead].GEAR_JERK)
      RET=EKI_GetInt("XmlClient","Server/EXAXIgn", LDate[IndexHead].EXAX_IGN)
    CASE 9, 10
      RET=EKI_GetReal("XmlClient","Server/Pos1/@X", Point1Date[IndexHead].X)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@Y", Point1Date[IndexHead].Y)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@Z", Point1Date[IndexHead].Z)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@A", Point1Date[IndexHead].A)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@B", Point1Date[IndexHead].B)
      RET=EKI_GetReal("XmlClient","Server/Pos1/@C", Point1Date[IndexHead].C)
      RET=EKI_GetInt("XmlClient","Server/Pos1/@S", Point1Date[IndexHead].S)
      RET=EKI_GetInt("XmlClient","Server/Pos1/@T", Point1Date[IndexHead].T)
      RET=EKI_GetReal("XmlClient","Server/Pos2/@X", Point2Date[IndexHead].X)
      RET=EKI_GetReal("XmlClient","Server/Pos2/@Y", Point2Date[IndexHead].Y)
      RET=EKI_GetReal("XmlClient","Server/Pos2/@Z", Point2Date[IndexHead].Z)
      RET=EKI_GetReal("XmlClient","Server/Pos2/@A", Point2Date[IndexHead].A)
      RET=EKI_GetReal("XmlClient","Server/Pos2/@B", Point2Date[IndexHead].B)
      RET=EKI_GetReal("XmlClient","Server/Pos2/@C", Point2Date[IndexHead].C)
      RET=EKI_GetInt("XmlClient","Server/Pos2/@S", Point2Date[IndexHead].S)
      RET=EKI_GetInt("XmlClient","Server/Pos2/@T", Point2Date[IndexHead].T)
      RET=EKI_GetInt("XmlClient","Server/ToolNo", FDate[IndexHead].TOOL_NO)
      RET=EKI_GetInt("XmlClient","Server/BaseNo", FDate[IndexHead].BASE_NO)
      RET=EKI_GetInt("XmlClient","Server/IpoFrame", CmdDate[IndexHead].IValue)
      FDate[IndexHead].IPO_FRAME=INT_TO_IPOMODE(CmdDate[IndexHead].IValue)
      RET=EKI_GetBool("XmlClient","Server/TQState", FDate[IndexHead].TQ_STATE)
      RET=EKI_GetReal("XmlClient","Server/Vel", LDate[IndexHead].VEL)
      RET=EKI_GetReal("XmlClient","Server/Acc", LDate[IndexHead].ACC)
      RET=EKI_GetReal("XmlClient","Server/ApoDist", LDate[IndexHead].APO_DIST)
      RET=EKI_GetReal("XmlClient","Server/ApoFac", LDate[IndexHead].APO_FAC)
      RET=EKI_GetReal("XmlClient","Server/AxisVel", LDate[IndexHead].AXIS_VEL)
      RET=EKI_GetReal("XmlClient","Server/AxisAcc", LDate[IndexHead].AXIS_ACC)
      RET=EKI_GetInt("XmlClient","Server/OriType", CmdDate[IndexHead].IValue)
      LDate[IndexHead].ORI_TYP=INT_TO_ORITYPE(CmdDate[IndexHead].IValue)
      RET=EKI_GetInt("XmlClient","Server/CircType", CmdDate[IndexHead].IValue)
      LDate[IndexHead].CIRC_TYP=INT_TO_CIRCTYPE(CmdDate[IndexHead].IValue)
      RET=EKI_GetReal("XmlClient","Server/JerkFac", LDate[IndexHead].JERK_FAC)
      RET=EKI_GetReal("XmlClient","Server/GearJerk", LDate[IndexHead].GEAR_JERK)
      RET=EKI_GetInt("XmlClient","Server/EXAXIgn", LDate[IndexHead].EXAX_IGN)
    CASE 100
      IF (IndexHead <> IndexTail) THEN
        $FLAG[4]=TRUE
      ENDIF
  ENDSWITCH
WAIT SEC 0.5



Point3Date[1] = {X 0.0, Y 0.0, Z 0.0, A 0.0, B 0.0, C 0.0, S 0, T 0};
Point3Date[2] = {X 0.0, Y 0.0, Z 0.0, A 0.0, B 0.0, C 0.0, S 0, T 0};


Counter = 1
WHILE TRUE
WHILE TRUE
  
           RET=EKI_GetReal("XmlClient","Server/Pos2/X", Point3Date[Counter].X)
      RET=EKI_GetReal("XmlClient","Server/Pos2/Y", Point3Date[Counter].Y)
      RET=EKI_GetReal("XmlClient","Server/Pos2/Z", Point3Date[Counter].Z)
       RET=EKI_GetReal("XmlClient","Server/Pos2/A", Point3Date[Counter].A)
      RET=EKI_GetReal("XmlClient","Server/Pos2/B", Point3Date[Counter].B)
      RET=EKI_GetReal("XmlClient","Server/Pos2/C", Point3Date[Counter].C)
       RET=EKI_GetInt("XmlClient","Server/Pos2/S", Point3Date[Counter].S)
       RET=EKI_GetInt("XmlClient","Server/Pos2/T", Point3Date[Counter].T)
   if counter == 1 then
   p = Point3Date[counter];
   p.Z = -5;
     PTP p;
   endif

    WAIT SEC 0.5
   
   
   
     RET = EKI_SetReal("XmlClient","Server/Pos2/X", Point3Date[Counter].X) 
  RET = EKI_SetReal("XmlClient","Server/Pos2/Y", Point3Date[Counter].Y) 
  RET = EKI_SetReal("XmlClient","Server/Pos2/Z", Point3Date[Counter].Z)   
    RET = EKI_SetReal("XmlClient","Server/Pos2/A", Point3Date[Counter].A) 
  RET = EKI_SetReal("XmlClient","Server/Pos2/B", Point3Date[Counter].B) 
  RET = EKI_SetReal("XmlClient","Server/Pos2/C", Point3Date[Counter].C)  
    RET = EKI_SetInt("XmlClient","Server/Pos2/S", Point3Date[Counter].S) 
  RET = EKI_SetInt("XmlClient","Server/Pos2/T", Point3Date[Counter].T) 
  RET = EKI_Send("XmlClient", "Server")

  PTP Point3Date[Counter]
   WAIT SEC 0.5
  Counter = Counter + 1
  IF Counter == 3 THEN
      Point3Date[Counter-1].Z = -5;
      PTP Point3Date[Counter-1];
      ; sending flag 1 = client finish the job
   Protocol = 100
   RET = EKI_SetInt("XmlClient","Robot/Cmd", Protocol) 
   RET = EKI_Send("XmlClient", "Robot")
Counter = 1
 wait sec 0.5
   ENDIF
;Point1Date[1]={X 40.0, Y 30.0, Z -35.0, A 130.0, B -80.0, C 130.0, S 2, T 3}

     
       
      ENDWHILE
      Counter = 1
      
      ENDWHILE 

      
      ; sending flag 1 = client finish the job
     ; Protocol = 100
     ;  RET = EKI_SetInt("XmlClient","Robot/Cmd", Protocol) 
 ;  RET = EKI_Send("XmlClient", "Robot")

      
  IndexHead=IndexHead+1
  IF IndexHead > 256 THEN
    IndexHead=1
  ENDIF

  IF IndexHead==IndexTail THEN
    $FLAG[3]=FALSE
    $FLAG[5]=TRUE
  ENDIF

  RXCount=RXCount-1
  IF RXCount==0 THEN
    $FLAG[3]=FALSE
  ENDIF
ENDIF

; Execution
IF $FLAG[4]==TRUE THEN
  IF ($FLAG[5]==FALSE) AND (IndexHead==IndexTail) THEN
    $FLAG[4]=FALSE
  ELSE
  SWITCH CmdDate[IndexTail].Cmd
    CASE 2
      $OUT[CmdDate[IndexTail].IValue]=CmdDate[IndexTail].BValue
    CASE 3
      PULSE($OUT[CmdDate[IndexTail].IValue], CmdDate[IndexTail].BValue, CmdDate[IndexTail].FValue)
    CASE 4
      $BWDSTART=FALSE
      PDAT_ACT=PDEFAULT
      FDAT_ACT=FHOME
      BAS(#PTP_PARAMS,PDate[IndexTail].VEL)
      $H_POS=XHOME
      PTP XHOME
    CASE 5
      $BWDSTART=FALSE
      PDAT_ACT=PDate[IndexTail]
      FDAT_ACT=FDate[IndexTail]
      BAS(#PTP_PARAMS,PDate[IndexTail].VEL)
      PTP Point1Date[IndexTail]
    CASE 6
      $BWDSTART=FALSE
      PDAT_ACT=PDate[IndexTail]
      FDAT_ACT=FDate[IndexTail]
      BAS(#PTP_PARAMS,PDate[IndexTail].VEL)
      PTP Point1Date[IndexTail] C_DIS
    CASE 7
      $BWDSTART=FALSE
      LDAT_ACT=LDate[IndexTail]
      FDAT_ACT=FDate[IndexTail]
      BAS(#CP_PARAMS,LDate[IndexTail].VEL)
      LIN Point1Date[IndexTail]
    CASE 8
      $BWDSTART=FALSE
      LDAT_ACT=LDate[IndexTail]
      FDAT_ACT=FDate[IndexTail]
      BAS(#CP_PARAMS,LDate[IndexTail].VEL)
      LIN Point1Date[IndexTail] C_DIS C_DIS
    CASE 9
      $BWDSTART=FALSE
      LDAT_ACT=LDate[IndexTail]
      FDAT_ACT=FDate[IndexTail]
      BAS(#CP_PARAMS,LDate[IndexTail].VEL)
      CIRC Point1Date[IndexTail], Point2Date[IndexTail]
    CASE 10
      $BWDSTART=FALSE
      LDAT_ACT=LDate[IndexTail]
      FDAT_ACT=FDate[IndexTail]
      BAS(#CP_PARAMS,LDate[IndexTail].VEL)
      CIRC Point1Date[IndexTail], Point2Date[IndexTail] C_DIS C_DIS
  ENDSWITCH

  IndexTail=IndexTail+1
  $FLAG[5]=FALSE
  IF IndexTail > 256 THEN
    IndexTail = 1
  ENDIF
  ENDIF
ENDIF
ENDLOOP

;RET=EKI_Close("XmlClient")
ENDLOOP
END

;FOLD INT_TO_APOMODE()
DEFFCT APO_MODE_T INT_TO_APOMODE(val:IN)
DECL INT val

SWITCH val
  CASE 0
    RETURN(#CPTP)
  CASE 1
    RETURN(#CDIS)
ENDSWITCH
ENDFCT
;ENDFOLD INT_TO_APOMODE()

;FOLD INT_TO_IPOMODE()
DEFFCT IPO_MODE INT_TO_IPOMODE(val:IN)
DECL INT val

SWITCH val
  CASE 0
    RETURN(#TCP)
  CASE 1
    RETURN(#BASE)
ENDSWITCH
ENDFCT
;ENDFOLD INT_TO_IPOMODE()

;FOLD INT_TO_ORITYPE()
DEFFCT ORI_TYPE INT_TO_ORITYPE(val:IN)
DECL INT val

SWITCH val
  CASE 0
    RETURN(#CONSTANT)
  CASE 1
    RETURN(#VAR)
  CASE 2
    RETURN(#JOINT)
ENDSWITCH
ENDFCT
;ENDFOLD INT_TO_ORITYPE()

;FOLD INT_TO_CIRCTYPE()
DEFFCT CIRC_TYPE INT_TO_CIRCTYPE(val:IN)
DECL INT val

SWITCH val
  CASE 0
    RETURN(#BASE)
  CASE 1
    RETURN(#PATH)
ENDSWITCH
ENDFCT
;ENDFOLD INT_TO_CIRCTYPE()
